---
docker:
  user: ubuntu
  groups:
  - docker
  docker_packages:
  - docker-ce
  - docker-ce-cli
  - containerd.io
  - docker-compose-plugin
  docker_deps:
  - ca-certificates
  - curl
  - gnupg
  - lsb-release
  - apt-utils
  - cron
  - smartmontools

# Docker compose setup
compose:
  setup_compose: true
  compose_basedir: docker
  compose_file_dirs:
  - prometheus
  - loki
  - promtail
  - alertmanager
  - grafana
  - nginx
  - mimir
  - mimir/config
  - grafana/config
  - loki/config
  - nginx/config
  - promtail/config
  - prometheus/config
  - prometheus/config/rules
  - alertmanager/config
  - alertmanager/config/alertmanager_templates
  compose_file:
    composeVersion: "3.7"
    restartPolicy: unless-stopped
  # Docker compose container definitions
  containers:
  - name: prometheus
    image: docker.io/prom/prometheus:v2.42.0
    container_name: prometheus
    volumes:
    - ./prometheus/config/:/etc/prometheus/
    - prometheus_data:/prometheus
    command:
    - '--config.file=/etc/prometheus/prometheus.yml'
    - '--storage.tsdb.path=/prometheus'
    - '--storage.tsdb.retention.time=90d'
    - '--web.enable-admin-api'
    - '--web.enable-lifecycle'
    - '--web.console.libraries=/usr/share/prometheus/console_libraries'
    - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
    - "0.0.0.0:9090:9090"
    networks:
    - monitoring
    depends_on:
    - cadvisor
    - mimir
  - name: cadvisor
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    container_name: cadvisor
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    - /dev/kmsg:/dev/kmsg:ro
    ports:
    - "127.0.0.1:8080:8080"
    networks:
    - monitoring
  - name: node-exporter
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node-exporter
    volumes:
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    - /:/rootfs:ro
    - /:/host:ro,rslave
    command:
    - '--path.rootfs=/host'
    - '--path.procfs=/host/proc'
    - '--path.sysfs=/host/sys'
    - --collector.filesystem.ignored-mount-points
    - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
    - "127.0.0.1:9100:9100"
    networks:
    - monitoring
  - name: alertmanager
    image: docker.io/prom/alertmanager:v0.25.0
    container_name: alertmanager
    command:
    - '--config.file=/etc/alertmanager/alertmanager.yml'
    - '--storage.path=/alertmanager'
    ports:
    - "127.0.0.1:9093:9093"
    volumes:
    - ./alertmanager/config:/etc/alertmanager/
    - alertmanager:/alertmanager
    networks:
    - monitoring
  - name: loki
    image: docker.io/grafana/loki:2.7.3
    ports:
    - "0.0.0.0:3100:3100"
    volumes:
    - ./loki/config:/etc/loki/
    - loki:/loki
    command:
    - '-config.file=/etc/loki/loki.yml'
    networks:
    - monitoring
    depends_on:
    - nginx
  - name: promtail
    image: docker.io/grafana/promtail:2.7.3
    volumes:
    - ./promtail/config:/etc/promtail/
    - /var/log:/var/log:ro
    - /var/run/docker.sock:/var/run/docker.sock
    command:
    - '-config.file=/etc/promtail/promtail.yml'
    networks:
    - monitoring
  - name: grafana
    image: docker.io/grafana/grafana:9.3.6-ubuntu
    volumes:
    - grafana:/var/lib/grafana
    - ./grafana/config:/etc/grafana
    environment:
      GF_INSTALL_PLUGINS: "grafana-piechart-panel"
      GF_LOG_MODE: console
    ports:
    - "127.0.0.1:3000:3000"
    networks:
      - monitoring
      - frontend
  - name: nginx
    image: nginx:1.23
    ports:
    - "0.0.0.0:80:8080"
    - "0.0.0.0:9000:9000"
    - "0.0.0.0:9001:9001"
    volumes:
    - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
    networks:
      - monitoring
      - frontend
  - name: mimir
    image: docker.io/grafana/mimir:2.6.0
    ports:
    - "127.0.0.1:9009:9009"
    volumes:
    - ./mimir/config:/etc/mimir
    - mimir:/mimir
    command:
    - '-config.file=/etc/mimir/mimir.yml'
    - '-distributor.ingestion-rate-limit=300000'
    - '-distributor.ingestion-burst-size=600000'
    depends_on:
    - nginx
    networks:
    - monitoring

minio_config:
  image: quay.io/minio/minio:RELEASE.2023-02-10T18-48-39Z

## Monitoring agent configuration ##
# Variables for node-exporter and cadvisor
node_exporter_jobs:
- name: node-exporter
  targets:
  - node-exporter:9100
  - 192.168.1.29:9100
  - 192.168.1.51:9100
  - 192.168.1.75:9100
- name: cadvisor
  targets:
  - 192.168.1.29:8080
  - 192.168.1.75:8080
  - dns1.donthurt.us:8080
  - cadvisor:8080

# Variables for prometheus k8s scraping
kubernetes_node_exporter_jobs:
- name: k0s-rpi
  api_server: '192.168.1.61:6443'
  cert_prefix: k0s
  cluster_name: k0s-rpi
- name: k8s-us-east-1
  api_server: '5.161.160.176:443'
  cert_prefix: k8s
  cluster_name: k8s-us-east-1

# Variables for weather API scraping
weather_jobs:
- name: madison
  endpoint: '/weather/53716'
  dc: ash
  az: ash-dc1
- name: orlando
  endpoint: '/weather/32789'
  dc: ash
  az: ash-dc1
- name: sarasota
  endpoint: '/weather/34230'
  dc: ash
  az: ash-dc1
- name: seward
  endpoint: '/weather/99664'
  dc: ash
  az: ash-dc1
- name: sandiego
  endpoint: '/weather/92117'
  dc: ash
  az: ash-dc1

# Global Prometheus config
prometheus_config:
  global:
    mimir: enabled
    scrape_interval: 10s
    evaluation_interval: 30s
    scrape_timeout: 10s
    external_labels:
      env: prod
log_index_retention: 336h
alertmanager_url: alertmanager

# Global Loki config
loki_config:
  object_storage: s3
  datadir: '/loki'
  endpoint: 'nginx:9000'
  region: us-east-1

# Global Promtail config
promtail_config:
  max_log_age: 12h

# Global Grafana config
grafana_config:
  app_mode: production
  server:
    protocol: http
    logging: enabled
    gzip: enabled
  database:
    type: sqlite3
  admin:
    username: admin

# Nginx config
nginx_config:
  grafana_hostname: 'grafana.donthurt.us'

mimir_config:
  datadir: '/mimir'
  buckets:
    name: mimir-datastore
  retention: 1y
  max_labels: 1000
  max_series: 1500000
