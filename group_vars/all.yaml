---
docker:
  user: ubuntu
  groups:
  - docker
  docker_packages:
  - docker-ce
  - docker-ce-cli
  - containerd.io
  - docker-compose-plugin
  docker_deps:
  - ca-certificates
  - curl
  - gnupg
  - lsb-release
  - apt-utils

# Docker compose setup
compose:
  setup_compose: true
  compose_basedir: docker
  compose_file_dirs:
  - prometheus
  - prometheus/config
  - alertmanager
  - alertmanager/config
  - loki
  - loki/config
  - promtail
  - promtail/config
  compose_file:
    composeVersion: "3.7"
    restartPolicy: unless-stopped
  # Docker compose container definitions
  containers:
  - name: prometheus
    image: docker.io/prom/prometheus:v2.41.0
    container_name: prometheus
    volumes:
      - ./prometheus/config/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=90d'
      - '--web.enable-admin-api'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "0.0.0.0:9090:9090"
    networks:
      - monitoring
    depends_on:
      - cadvisor
  - name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/kmsg:/dev/kmsg:ro
    ports:
      - "127.0.0.1:8080:8080"
    networks:
      - monitoring
  - name: node-exporter
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - "127.0.0.1:9100:9100"
    networks:
      - monitoring
  - name: alertmanager
    image: docker.io/prom/alertmanager:v0.25.0
    container_name: alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    ports:
      - "127.0.0.1:9093:9093"
    volumes:
      - ./alertmanager/config:/etc/alertmanager/
      - alertmanager:/alertmanager
    networks:
      - monitoring
  - name: loki
    image: docker.io/grafana/loki:2.7.1
    ports:
      - "0.0.0.0:3100:3100"
    volumes:
      - ./loki/config:/etc/loki/
      - loki:/loki
    command:
      - '-config.file=/etc/loki/loki.yml'
    networks:
      - monitoring
  - name: promtail
    image: docker.io/grafana/promtail:2.7.2
    volumes:
      - ./promtail/config:/etc/promtail/
      - /var/log:/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - '-config.file=/etc/promtail/promtail.yml'
    networks:
      - monitoring

## Monitoring agent configuration ##
# Variables for node-exporter and cadvisor
node_exporter_jobs:
- name: node-exporter
  targets:
  - node-exporter:9100
  - 192.168.1.29:9100
  - 192.168.1.51:9100
  - 192.168.1.75:9100
- name: cadvisor
  targets:
  - 192.168.1.29:8080
  - 192.168.1.75:8080
  - dns1.donthurt.us:8080
  - cadvisor:8080

# Variables for prometheus k8s scraping
kubernetes_node_exporter_jobs:
- name: k0s-rpi
  api_server: '192.168.1.61:6443'
  cert_prefix: k0s
  cluster_name: k0s-rpi
- name: k8s-us-east-1
  api_server: '5.161.160.176:443'
  cert_prefix: k8s
  cluster_name: k8s-us-east-1

# Global Prometheus config
prometheus_config:
  global:
    scrape_interval: 10s
    evaluation_interval: 10s
    external_labels:
      env: prod
log_index_retention: 744h
alertmanager_url: alertmanager

# Global Loki config
loki_config:
  object_storage: s3
  datadir: '/loki'

# Global Promtail config
promtail_config:
  max_log_age: 48h