global:
  scrape_interval: 10s
  evaluation_interval: 10s

  external_labels:
    env: prod

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets: ['alertmanager:9093']

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
- /etc/prometheus/rules/*.yml
  # - "first_rules.yml"
  # - "second_rules.yml"

#### Scrape configs ####
# Main scrape config
## 1. prometheus node exporter
## 2. k8s node exporter and api
## 3. hcloud node exporter
## 4. Grafana
scrape_configs:
  - job_name: 'prometheus'
    scrape_interval: 5s
    scrape_timeout: 5s
    static_configs:
      - targets: ['localhost:9090']
  - job_name: 'alertmanager'
    scrape_interval: 5s
    scrape_timeout: 5s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['alertmanager:9093']
  - job_name: node-exporter
    static_configs:
    - targets: ['node-exporter:9100', '192.168.1.29:9100', '192.168.1.51:9100', '192.168.1.73:9100', '192.168.1.75:9100']
    metric_relabel_configs:
    - source_labels: [__name__]
      regex: '(container_tasks_state|container_memory_failures_total)'
      action: drop
    - source_labels: [id]
      regex: '/system.slice/var-lib-docker-containers.*-shm.mount'
      action: drop
    - source_labels: [image]
      regex: '.*/(.*)'
      replacement: '$1'
      target_label: id
  - job_name: cadvisor
    static_configs:
    - targets: ['192.168.1.29:8080', '192.168.1.75:8080', 'dns1.donthurt.us:8080']
    metric_relabel_configs:
    - source_labels: [__name__]
      regex: '(container_tasks_state|container_memory_failures_total)'
      action: drop
    - source_labels: [id]
      regex: '/system.slice/var-lib-docker-containers.*-shm.mount'
      action: drop
    - source_labels: [image]
      regex: '.*/(.*)'
      replacement: '$1'
      target_label: id
  - job_name: k0s-rpi-node
    scrape_interval: 10s
    scrape_timeout: 5s
    scheme: https
    tls_config:
      ca_file: "/etc/prometheus/k0s-kubernetes-ca.crt"
      cert_file: "/etc/prometheus/k0s-kubernetes.crt"
      key_file: "/etc/prometheus/k0s-kubernetes.key"
      insecure_skip_verify: true
    kubernetes_sd_configs:
    - role: node
      api_server: https://192.168.1.61:6443
      tls_config:
        ca_file: "/etc/prometheus/k0s-kubernetes-ca.crt"
        cert_file: "/etc/prometheus/k0s-kubernetes.crt"
        key_file: "/etc/prometheus/k0s-kubernetes.key"
        insecure_skip_verify: true
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - target_label: __address__
        replacement: 192.168.1.61:6443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: kubernetes_io_hostname
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: service_name
      - source_labels: [__meta_kubernetes_pod_node_name]
        action: replace
        target_label: hostname
    metric_relabel_configs:
      - action: replace
        source_labels: [id]
        regex: '^/system\.slice/(.+)\.service$'
        target_label: systemd_service_name
        replacement: '${1}'
      - target_label: cluster
        replacement: k0s-rpi
  - job_name: k0s-rpi-service-endpoints
    scrape_interval: 10s
    scrape_timeout: 5s
    scheme: https
    tls_config:
      ca_file: "/etc/prometheus/k0s-kubernetes-ca.crt"
      cert_file: "/etc/prometheus/k0s-kubernetes.crt"
      key_file: "/etc/prometheus/k0s-kubernetes.key"
      insecure_skip_verify: true
    kubernetes_sd_configs:
    - role: endpoints
      api_server: https://192.168.1.61:6443
      tls_config:
        ca_file: "/etc/prometheus/k0s-kubernetes-ca.crt"
        cert_file: "/etc/prometheus/k0s-kubernetes.crt"
        key_file: "/etc/prometheus/k0s-kubernetes.key"
        insecure_skip_verify: true
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: (\d+)
      target_label: __meta_kubernetes_pod_container_port_number
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
      action: replace
      regex: ()
      target_label: __meta_kubernetes_service_annotation_prometheus_io_path
      replacement: /metrics
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_pod_container_port_number, __meta_kubernetes_service_annotation_prometheus_io_path]
      target_label: __metrics_path__
      regex: (.+);(.+);(.+);(.+)
      replacement: /api/v1/namespaces/$1/services/$2:$3/proxy$4
    - target_label: __address__
      replacement: 192.168.1.61:6443
    - action: labelmap
      regex: __meta_kubernetes_service_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_service_name]
      action: replace
      target_label: kubernetes_name
    - source_labels: [__meta_kubernetes_pod_node_name]
      action: replace
      target_label: instance
    metric_relabel_configs:
    - target_label: cluster
      replacement: k0s-rpi
  - job_name: k0s-rpi-pods
    scrape_interval: 10s
    scrape_timeout: 5s
    scheme: https
    tls_config:
      ca_file: "/etc/prometheus/k0s-kubernetes-ca.crt"
      cert_file: "/etc/prometheus/k0s-kubernetes.crt"
      key_file: "/etc/prometheus/k0s-kubernetes.key"
      insecure_skip_verify: true
    kubernetes_sd_configs:
    - role: pod
      api_server: https://192.168.1.61:6443
      tls_config:
        ca_file: "/etc/prometheus/k0s-kubernetes-ca.crt"
        cert_file: "/etc/prometheus/k0s-kubernetes.crt"
        key_file: "/etc/prometheus/k0s-kubernetes.key"
        insecure_skip_verify: true
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      regex: ()
      target_label: __meta_kubernetes_pod_annotation_prometheus_io_path
      replacement: /metrics
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name, __meta_kubernetes_pod_container_port_number, __meta_kubernetes_pod_annotation_prometheus_io_path]
      target_label: __metrics_path__
      regex: (.+);(.+);(.+);(.+)
      replacement: /api/v1/namespaces/$1/pods/$2:$3/proxy$4
    - target_label: __address__
      replacement: 192.168.1.61:6443
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [postgres_operator_crunchydata_com_cluster]
      action: replace
      regex: (.*)
      target_label: pg_cluster_name
    - source_labels: [postgres_operator_crunchydata_com_instance]
      action: replace
      regex: (.*)
      target_label: pg_cluster_member
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name
    - source_labels: [__meta_kubernetes_pod_node_name]
      action: replace
      target_label: instance
    metric_relabel_configs:
    - target_label: cluster
      replacement: k0s-rpi
  - job_name: k8s-us-east-1-node
    scrape_interval: 10s
    scrape_timeout: 5s
    scheme: https
    tls_config:
      ca_file: "/etc/prometheus/k8s-kubernetes-ca.crt"
      cert_file: "/etc/prometheus/k8s-kubernetes.crt"
      key_file: "/etc/prometheus/k8s-kubernetes.key"
      insecure_skip_verify: true
    kubernetes_sd_configs:
    - role: node
      api_server: https://5.161.160.176:443
      tls_config:
        ca_file: "/etc/prometheus/k8s-kubernetes-ca.crt"
        cert_file: "/etc/prometheus/k8s-kubernetes.crt"
        key_file: "/etc/prometheus/k8s-kubernetes.key"
        insecure_skip_verify: true
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - target_label: __address__
        replacement: 5.161.160.176:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: kubernetes_io_hostname
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: service_name
      - source_labels: [__meta_kubernetes_pod_node_name]
        action: replace
        target_label: hostname
    metric_relabel_configs:
      - action: replace
        source_labels: [id]
        regex: '^/system\.slice/(.+)\.service$'
        target_label: systemd_service_name
        replacement: '${1}'
      - target_label: cluster
        replacement: k8s-us-east-1
  - job_name: k8s-us-east-1-service-endpoints
    scrape_interval: 10s
    scrape_timeout: 5s
    scheme: https
    tls_config:
      ca_file: "/etc/prometheus/k8s-kubernetes-ca.crt"
      cert_file: "/etc/prometheus/k8s-kubernetes.crt"
      key_file: "/etc/prometheus/k8s-kubernetes.key"
      insecure_skip_verify: true
    kubernetes_sd_configs:
    - role: endpoints
      api_server: https://5.161.160.176:443
      tls_config:
        ca_file: "/etc/prometheus/k8s-kubernetes-ca.crt"
        cert_file: "/etc/prometheus/k8s-kubernetes.crt"
        key_file: "/etc/prometheus/k8s-kubernetes.key"
        insecure_skip_verify: true
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: (\d+)
      target_label: __meta_kubernetes_pod_container_port_number
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
      action: replace
      regex: ()
      target_label: __meta_kubernetes_service_annotation_prometheus_io_path
      replacement: /metrics
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_pod_container_port_number, __meta_kubernetes_service_annotation_prometheus_io_path]
      target_label: __metrics_path__
      regex: (.+);(.+);(.+);(.+)
      replacement: /api/v1/namespaces/$1/services/$2:$3/proxy$4
    - target_label: __address__
      replacement: 5.161.160.176:443
    - action: labelmap
      regex: __meta_kubernetes_service_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_service_name]
      action: replace
      target_label: kubernetes_name
    - source_labels: [__meta_kubernetes_pod_node_name]
      action: replace
      target_label: instance
    metric_relabel_configs:
    - target_label: cluster
      replacement: k8s-us-east-1
  - job_name: k8s-us-east-1-pods
    scrape_interval: 10s
    scrape_timeout: 5s
    scheme: https
    tls_config:
      ca_file: "/etc/prometheus/k8s-kubernetes-ca.crt"
      cert_file: "/etc/prometheus/k8s-kubernetes.crt"
      key_file: "/etc/prometheus/k8s-kubernetes.key"
      insecure_skip_verify: true
    kubernetes_sd_configs:
    - role: pod
      api_server: https://5.161.160.176:443
      tls_config:
        ca_file: "/etc/prometheus/k8s-kubernetes-ca.crt"
        cert_file: "/etc/prometheus/k8s-kubernetes.crt"
        key_file: "/etc/prometheus/k8s-kubernetes.key"
        insecure_skip_verify: true
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      regex: ()
      target_label: __meta_kubernetes_pod_annotation_prometheus_io_path
      replacement: /metrics
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name, __meta_kubernetes_pod_container_port_number, __meta_kubernetes_pod_annotation_prometheus_io_path]
      target_label: __metrics_path__
      regex: (.+);(.+);(.+);(.+)
      replacement: /api/v1/namespaces/$1/pods/$2:$3/proxy$4
    - target_label: __address__
      replacement: 5.161.160.176:443
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [postgres_operator_crunchydata_com_cluster]
      action: replace
      regex: (.*)
      target_label: pg_cluster_name
    - source_labels: [postgres_operator_crunchydata_com_instance]
      action: replace
      regex: (.*)
      target_label: pg_cluster_member
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name
    - source_labels: [__meta_kubernetes_pod_node_name]
      action: replace
      target_label: instance
    metric_relabel_configs:
    - target_label: cluster
      replacement: k8s-us-east-1
  - job_name: 'hcloud-shared-services-node'
    scrape_interval: 30s
    scrape_timeout: 30s
    hetzner_sd_configs:
    - authorization:
        credentials: "{{ hcloud_token }}"
      role: "hcloud"
    relabel_configs:
    - source_labels: [__meta_hetzner_public_ipv4]
      target_label: __address__
      replacement: "$1:9100"
  - job_name: 'grafana'
    scrape_interval: 5s
    scrape_timeout: 5s
    metrics_path: '/metrics'
    basic_auth:
      username: metrics
      password: "Zp8ydgal"
    static_configs:
      - targets: ['grafana:3000']
